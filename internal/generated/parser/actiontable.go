// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(15), // identifier
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // $
			nil,          // &&
			nil,          // ||
			nil,          // ==
			nil,          // !=
			nil,          // <>
			nil,          // (
			nil,          // )
			nil,          // true
			nil,          // false
			nil,          // int_lit
			nil,          // string_lit
			nil,          // ,
			nil,          // empty
			nil,          // .
			nil,          // identifier
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: Goal
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // $, reduce: Expr
			shift(17), // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(4), // $, reduce: AndExpr
			reduce(4), // &&, reduce: AndExpr
			shift(18), // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(6), // $, reduce: OrExpr
			reduce(6), // &&, reduce: OrExpr
			reduce(6), // ||, reduce: OrExpr
			shift(19), // ==
			shift(20), // !=
			shift(21), // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(10), // $, reduce: RelExpr
			reduce(10), // &&, reduce: RelExpr
			reduce(10), // ||, reduce: RelExpr
			reduce(10), // ==, reduce: RelExpr
			reduce(10), // !=, reduce: RelExpr
			reduce(10), // <>, reduce: RelExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(27), // (
			nil,       // )
			shift(30), // true
			shift(31), // false
			shift(32), // int_lit
			shift(33), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(35), // identifier
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(12), // $, reduce: UnaryExpr
			reduce(12), // &&, reduce: UnaryExpr
			reduce(12), // ||, reduce: UnaryExpr
			reduce(12), // ==, reduce: UnaryExpr
			reduce(12), // !=, reduce: UnaryExpr
			reduce(12), // <>, reduce: UnaryExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(13), // $, reduce: UnaryExpr
			reduce(13), // &&, reduce: UnaryExpr
			reduce(13), // ||, reduce: UnaryExpr
			reduce(13), // ==, reduce: UnaryExpr
			reduce(13), // !=, reduce: UnaryExpr
			reduce(13), // <>, reduce: UnaryExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(14), // $, reduce: ConstantExpr
			reduce(14), // &&, reduce: ConstantExpr
			reduce(14), // ||, reduce: ConstantExpr
			reduce(14), // ==, reduce: ConstantExpr
			reduce(14), // !=, reduce: ConstantExpr
			reduce(14), // <>, reduce: ConstantExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(15), // $, reduce: ConstantExpr
			reduce(15), // &&, reduce: ConstantExpr
			reduce(15), // ||, reduce: ConstantExpr
			reduce(15), // ==, reduce: ConstantExpr
			reduce(15), // !=, reduce: ConstantExpr
			reduce(15), // <>, reduce: ConstantExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(16), // $, reduce: ConstantExpr
			reduce(16), // &&, reduce: ConstantExpr
			reduce(16), // ||, reduce: ConstantExpr
			reduce(16), // ==, reduce: ConstantExpr
			reduce(16), // !=, reduce: ConstantExpr
			reduce(16), // <>, reduce: ConstantExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(17), // $, reduce: ConstantExpr
			reduce(17), // &&, reduce: ConstantExpr
			reduce(17), // ||, reduce: ConstantExpr
			reduce(17), // ==, reduce: ConstantExpr
			reduce(17), // !=, reduce: ConstantExpr
			reduce(17), // <>, reduce: ConstantExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(23), // $, reduce: CallExpr
			reduce(23), // &&, reduce: CallExpr
			reduce(23), // ||, reduce: CallExpr
			reduce(23), // ==, reduce: CallExpr
			reduce(23), // !=, reduce: CallExpr
			reduce(23), // <>, reduce: CallExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			shift(37),  // .
			nil,        // identifier
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(26), // $, reduce: LookupExpr
			reduce(26), // &&, reduce: LookupExpr
			reduce(26), // ||, reduce: LookupExpr
			reduce(26), // ==, reduce: LookupExpr
			reduce(26), // !=, reduce: LookupExpr
			reduce(26), // <>, reduce: LookupExpr
			shift(38),  // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			reduce(26), // ., reduce: LookupExpr
			nil,        // identifier
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(25), // $, reduce: DerefExpr
			reduce(25), // &&, reduce: DerefExpr
			reduce(25), // ||, reduce: DerefExpr
			reduce(25), // ==, reduce: DerefExpr
			reduce(25), // !=, reduce: DerefExpr
			reduce(25), // <>, reduce: DerefExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			reduce(25), // ., reduce: DerefExpr
			nil,        // identifier
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(15), // identifier
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(15), // identifier
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(15), // identifier
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(15), // identifier
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(15), // identifier
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			shift(44), // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(45), // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			reduce(2), // ), reduce: Expr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(4), // &&, reduce: AndExpr
			shift(46), // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			reduce(4), // ), reduce: AndExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(6), // &&, reduce: OrExpr
			reduce(6), // ||, reduce: OrExpr
			shift(47), // ==
			shift(48), // !=
			shift(49), // <>
			nil,       // (
			reduce(6), // ), reduce: OrExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(10), // &&, reduce: RelExpr
			reduce(10), // ||, reduce: RelExpr
			reduce(10), // ==, reduce: RelExpr
			reduce(10), // !=, reduce: RelExpr
			reduce(10), // <>, reduce: RelExpr
			nil,        // (
			reduce(10), // ), reduce: RelExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(27), // (
			nil,       // )
			shift(30), // true
			shift(31), // false
			shift(32), // int_lit
			shift(33), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(35), // identifier
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(12), // &&, reduce: UnaryExpr
			reduce(12), // ||, reduce: UnaryExpr
			reduce(12), // ==, reduce: UnaryExpr
			reduce(12), // !=, reduce: UnaryExpr
			reduce(12), // <>, reduce: UnaryExpr
			nil,        // (
			reduce(12), // ), reduce: UnaryExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(13), // &&, reduce: UnaryExpr
			reduce(13), // ||, reduce: UnaryExpr
			reduce(13), // ==, reduce: UnaryExpr
			reduce(13), // !=, reduce: UnaryExpr
			reduce(13), // <>, reduce: UnaryExpr
			nil,        // (
			reduce(13), // ), reduce: UnaryExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(14), // &&, reduce: ConstantExpr
			reduce(14), // ||, reduce: ConstantExpr
			reduce(14), // ==, reduce: ConstantExpr
			reduce(14), // !=, reduce: ConstantExpr
			reduce(14), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(14), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(15), // &&, reduce: ConstantExpr
			reduce(15), // ||, reduce: ConstantExpr
			reduce(15), // ==, reduce: ConstantExpr
			reduce(15), // !=, reduce: ConstantExpr
			reduce(15), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(15), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(16), // &&, reduce: ConstantExpr
			reduce(16), // ||, reduce: ConstantExpr
			reduce(16), // ==, reduce: ConstantExpr
			reduce(16), // !=, reduce: ConstantExpr
			reduce(16), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(16), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(17), // &&, reduce: ConstantExpr
			reduce(17), // ||, reduce: ConstantExpr
			reduce(17), // ==, reduce: ConstantExpr
			reduce(17), // !=, reduce: ConstantExpr
			reduce(17), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(17), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(23), // &&, reduce: CallExpr
			reduce(23), // ||, reduce: CallExpr
			reduce(23), // ==, reduce: CallExpr
			reduce(23), // !=, reduce: CallExpr
			reduce(23), // <>, reduce: CallExpr
			nil,        // (
			reduce(23), // ), reduce: CallExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			shift(51),  // .
			nil,        // identifier
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(26), // &&, reduce: LookupExpr
			reduce(26), // ||, reduce: LookupExpr
			reduce(26), // ==, reduce: LookupExpr
			reduce(26), // !=, reduce: LookupExpr
			reduce(26), // <>, reduce: LookupExpr
			shift(52),  // (
			reduce(26), // ), reduce: LookupExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			reduce(26), // ., reduce: LookupExpr
			nil,        // identifier
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(25), // &&, reduce: DerefExpr
			reduce(25), // ||, reduce: DerefExpr
			reduce(25), // ==, reduce: DerefExpr
			reduce(25), // !=, reduce: DerefExpr
			reduce(25), // <>, reduce: DerefExpr
			nil,        // (
			reduce(25), // ), reduce: DerefExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			reduce(25), // ., reduce: DerefExpr
			nil,        // identifier
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(53), // identifier
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			shift(59),  // (
			reduce(20), // ), reduce: ArgList
			shift(62),  // true
			shift(63),  // false
			shift(64),  // int_lit
			shift(65),  // string_lit
			reduce(20), // ,, reduce: ArgList
			nil,        // empty
			nil,        // .
			shift(68),  // identifier
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(3), // $, reduce: AndExpr
			reduce(3), // &&, reduce: AndExpr
			shift(18), // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(5), // $, reduce: OrExpr
			reduce(5), // &&, reduce: OrExpr
			reduce(5), // ||, reduce: OrExpr
			shift(19), // ==
			shift(20), // !=
			shift(21), // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(7), // $, reduce: RelExpr
			reduce(7), // &&, reduce: RelExpr
			reduce(7), // ||, reduce: RelExpr
			reduce(7), // ==, reduce: RelExpr
			reduce(7), // !=, reduce: RelExpr
			reduce(7), // <>, reduce: RelExpr
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(8), // $, reduce: RelExpr
			reduce(8), // &&, reduce: RelExpr
			reduce(8), // ||, reduce: RelExpr
			reduce(8), // ==, reduce: RelExpr
			reduce(8), // !=, reduce: RelExpr
			reduce(8), // <>, reduce: RelExpr
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(9), // $, reduce: RelExpr
			reduce(9), // &&, reduce: RelExpr
			reduce(9), // ||, reduce: RelExpr
			reduce(9), // ==, reduce: RelExpr
			reduce(9), // !=, reduce: RelExpr
			reduce(9), // <>, reduce: RelExpr
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(11), // $, reduce: UnaryExpr
			reduce(11), // &&, reduce: UnaryExpr
			reduce(11), // ||, reduce: UnaryExpr
			reduce(11), // ==, reduce: UnaryExpr
			reduce(11), // !=, reduce: UnaryExpr
			reduce(11), // <>, reduce: UnaryExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(27), // (
			nil,       // )
			shift(30), // true
			shift(31), // false
			shift(32), // int_lit
			shift(33), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(35), // identifier
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(27), // (
			nil,       // )
			shift(30), // true
			shift(31), // false
			shift(32), // int_lit
			shift(33), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(35), // identifier
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(27), // (
			nil,       // )
			shift(30), // true
			shift(31), // false
			shift(32), // int_lit
			shift(33), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(35), // identifier
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(27), // (
			nil,       // )
			shift(30), // true
			shift(31), // false
			shift(32), // int_lit
			shift(33), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(35), // identifier
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(27), // (
			nil,       // )
			shift(30), // true
			shift(31), // false
			shift(32), // int_lit
			shift(33), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(35), // identifier
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			shift(75), // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(76), // identifier
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			shift(59),  // (
			reduce(20), // ), reduce: ArgList
			shift(62),  // true
			shift(63),  // false
			shift(64),  // int_lit
			shift(65),  // string_lit
			reduce(20), // ,, reduce: ArgList
			nil,        // empty
			nil,        // .
			shift(68),  // identifier
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(24), // $, reduce: DerefExpr
			reduce(24), // &&, reduce: DerefExpr
			reduce(24), // ||, reduce: DerefExpr
			reduce(24), // ==, reduce: DerefExpr
			reduce(24), // !=, reduce: DerefExpr
			reduce(24), // <>, reduce: DerefExpr
			shift(78),  // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			reduce(24), // ., reduce: DerefExpr
			nil,        // identifier
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			nil,        // (
			reduce(19), // ), reduce: ArgList
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(19), // ,, reduce: ArgList
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(79), // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			reduce(2), // ), reduce: Expr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			reduce(2), // ,, reduce: Expr
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(4), // &&, reduce: AndExpr
			shift(80), // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			reduce(4), // ), reduce: AndExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			reduce(4), // ,, reduce: AndExpr
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(6), // &&, reduce: OrExpr
			reduce(6), // ||, reduce: OrExpr
			shift(81), // ==
			shift(82), // !=
			shift(83), // <>
			nil,       // (
			reduce(6), // ), reduce: OrExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			reduce(6), // ,, reduce: OrExpr
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(10), // &&, reduce: RelExpr
			reduce(10), // ||, reduce: RelExpr
			reduce(10), // ==, reduce: RelExpr
			reduce(10), // !=, reduce: RelExpr
			reduce(10), // <>, reduce: RelExpr
			nil,        // (
			reduce(10), // ), reduce: RelExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(10), // ,, reduce: RelExpr
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(27), // (
			nil,       // )
			shift(30), // true
			shift(31), // false
			shift(32), // int_lit
			shift(33), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(35), // identifier
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(12), // &&, reduce: UnaryExpr
			reduce(12), // ||, reduce: UnaryExpr
			reduce(12), // ==, reduce: UnaryExpr
			reduce(12), // !=, reduce: UnaryExpr
			reduce(12), // <>, reduce: UnaryExpr
			nil,        // (
			reduce(12), // ), reduce: UnaryExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(12), // ,, reduce: UnaryExpr
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(13), // &&, reduce: UnaryExpr
			reduce(13), // ||, reduce: UnaryExpr
			reduce(13), // ==, reduce: UnaryExpr
			reduce(13), // !=, reduce: UnaryExpr
			reduce(13), // <>, reduce: UnaryExpr
			nil,        // (
			reduce(13), // ), reduce: UnaryExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(13), // ,, reduce: UnaryExpr
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(14), // &&, reduce: ConstantExpr
			reduce(14), // ||, reduce: ConstantExpr
			reduce(14), // ==, reduce: ConstantExpr
			reduce(14), // !=, reduce: ConstantExpr
			reduce(14), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(14), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(14), // ,, reduce: ConstantExpr
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(15), // &&, reduce: ConstantExpr
			reduce(15), // ||, reduce: ConstantExpr
			reduce(15), // ==, reduce: ConstantExpr
			reduce(15), // !=, reduce: ConstantExpr
			reduce(15), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(15), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(15), // ,, reduce: ConstantExpr
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(16), // &&, reduce: ConstantExpr
			reduce(16), // ||, reduce: ConstantExpr
			reduce(16), // ==, reduce: ConstantExpr
			reduce(16), // !=, reduce: ConstantExpr
			reduce(16), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(16), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(16), // ,, reduce: ConstantExpr
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(17), // &&, reduce: ConstantExpr
			reduce(17), // ||, reduce: ConstantExpr
			reduce(17), // ==, reduce: ConstantExpr
			reduce(17), // !=, reduce: ConstantExpr
			reduce(17), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(17), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(17), // ,, reduce: ConstantExpr
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			shift(85), // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			shift(86), // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(23), // &&, reduce: CallExpr
			reduce(23), // ||, reduce: CallExpr
			reduce(23), // ==, reduce: CallExpr
			reduce(23), // !=, reduce: CallExpr
			reduce(23), // <>, reduce: CallExpr
			nil,        // (
			reduce(23), // ), reduce: CallExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(23), // ,, reduce: CallExpr
			nil,        // empty
			shift(87),  // .
			nil,        // identifier
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(26), // &&, reduce: LookupExpr
			reduce(26), // ||, reduce: LookupExpr
			reduce(26), // ==, reduce: LookupExpr
			reduce(26), // !=, reduce: LookupExpr
			reduce(26), // <>, reduce: LookupExpr
			shift(88),  // (
			reduce(26), // ), reduce: LookupExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(26), // ,, reduce: LookupExpr
			nil,        // empty
			reduce(26), // ., reduce: LookupExpr
			nil,        // identifier
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(25), // &&, reduce: DerefExpr
			reduce(25), // ||, reduce: DerefExpr
			reduce(25), // ==, reduce: DerefExpr
			reduce(25), // !=, reduce: DerefExpr
			reduce(25), // <>, reduce: DerefExpr
			nil,        // (
			reduce(25), // ), reduce: DerefExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(25), // ,, reduce: DerefExpr
			nil,        // empty
			reduce(25), // ., reduce: DerefExpr
			nil,        // identifier
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(3), // &&, reduce: AndExpr
			shift(46), // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			reduce(3), // ), reduce: AndExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(5), // &&, reduce: OrExpr
			reduce(5), // ||, reduce: OrExpr
			shift(47), // ==
			shift(48), // !=
			shift(49), // <>
			nil,       // (
			reduce(5), // ), reduce: OrExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(7), // &&, reduce: RelExpr
			reduce(7), // ||, reduce: RelExpr
			reduce(7), // ==, reduce: RelExpr
			reduce(7), // !=, reduce: RelExpr
			reduce(7), // <>, reduce: RelExpr
			nil,       // (
			reduce(7), // ), reduce: RelExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(8), // &&, reduce: RelExpr
			reduce(8), // ||, reduce: RelExpr
			reduce(8), // ==, reduce: RelExpr
			reduce(8), // !=, reduce: RelExpr
			reduce(8), // <>, reduce: RelExpr
			nil,       // (
			reduce(8), // ), reduce: RelExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(9), // &&, reduce: RelExpr
			reduce(9), // ||, reduce: RelExpr
			reduce(9), // ==, reduce: RelExpr
			reduce(9), // !=, reduce: RelExpr
			reduce(9), // <>, reduce: RelExpr
			nil,       // (
			reduce(9), // ), reduce: RelExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(11), // &&, reduce: UnaryExpr
			reduce(11), // ||, reduce: UnaryExpr
			reduce(11), // ==, reduce: UnaryExpr
			reduce(11), // !=, reduce: UnaryExpr
			reduce(11), // <>, reduce: UnaryExpr
			nil,        // (
			reduce(11), // ), reduce: UnaryExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(24), // &&, reduce: DerefExpr
			reduce(24), // ||, reduce: DerefExpr
			reduce(24), // ==, reduce: DerefExpr
			reduce(24), // !=, reduce: DerefExpr
			reduce(24), // <>, reduce: DerefExpr
			shift(89),  // (
			reduce(24), // ), reduce: DerefExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			reduce(24), // ., reduce: DerefExpr
			nil,        // identifier
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			shift(90), // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			shift(86), // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			shift(59),  // (
			reduce(20), // ), reduce: ArgList
			shift(62),  // true
			shift(63),  // false
			shift(64),  // int_lit
			shift(65),  // string_lit
			reduce(20), // ,, reduce: ArgList
			nil,        // empty
			nil,        // .
			shift(68),  // identifier
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(59), // (
			nil,       // )
			shift(62), // true
			shift(63), // false
			shift(64), // int_lit
			shift(65), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(68), // identifier
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(59), // (
			nil,       // )
			shift(62), // true
			shift(63), // false
			shift(64), // int_lit
			shift(65), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(68), // identifier
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(59), // (
			nil,       // )
			shift(62), // true
			shift(63), // false
			shift(64), // int_lit
			shift(65), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(68), // identifier
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(59), // (
			nil,       // )
			shift(62), // true
			shift(63), // false
			shift(64), // int_lit
			shift(65), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(68), // identifier
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(59), // (
			nil,       // )
			shift(62), // true
			shift(63), // false
			shift(64), // int_lit
			shift(65), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(68), // identifier
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			shift(97), // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(22), // $, reduce: CallExpr
			reduce(22), // &&, reduce: CallExpr
			reduce(22), // ||, reduce: CallExpr
			reduce(22), // ==, reduce: CallExpr
			reduce(22), // !=, reduce: CallExpr
			reduce(22), // <>, reduce: CallExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(59), // (
			nil,       // )
			shift(62), // true
			shift(63), // false
			shift(64), // int_lit
			shift(65), // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(68), // identifier
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // ,
			nil,       // empty
			nil,       // .
			shift(99), // identifier
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			shift(59),  // (
			reduce(20), // ), reduce: ArgList
			shift(62),  // true
			shift(63),  // false
			shift(64),  // int_lit
			shift(65),  // string_lit
			reduce(20), // ,, reduce: ArgList
			nil,        // empty
			nil,        // .
			shift(68),  // identifier
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			shift(59),  // (
			reduce(20), // ), reduce: ArgList
			shift(62),  // true
			shift(63),  // false
			shift(64),  // int_lit
			shift(65),  // string_lit
			reduce(20), // ,, reduce: ArgList
			nil,        // empty
			nil,        // .
			shift(68),  // identifier
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(22), // &&, reduce: CallExpr
			reduce(22), // ||, reduce: CallExpr
			reduce(22), // ==, reduce: CallExpr
			reduce(22), // !=, reduce: CallExpr
			reduce(22), // <>, reduce: CallExpr
			nil,        // (
			reduce(22), // ), reduce: CallExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			nil,        // (
			shift(102), // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			shift(86),  // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(3), // &&, reduce: AndExpr
			shift(80), // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			reduce(3), // ), reduce: AndExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			reduce(3), // ,, reduce: AndExpr
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(5), // &&, reduce: OrExpr
			reduce(5), // ||, reduce: OrExpr
			shift(81), // ==
			shift(82), // !=
			shift(83), // <>
			nil,       // (
			reduce(5), // ), reduce: OrExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			reduce(5), // ,, reduce: OrExpr
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(7), // &&, reduce: RelExpr
			reduce(7), // ||, reduce: RelExpr
			reduce(7), // ==, reduce: RelExpr
			reduce(7), // !=, reduce: RelExpr
			reduce(7), // <>, reduce: RelExpr
			nil,       // (
			reduce(7), // ), reduce: RelExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			reduce(7), // ,, reduce: RelExpr
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(8), // &&, reduce: RelExpr
			reduce(8), // ||, reduce: RelExpr
			reduce(8), // ==, reduce: RelExpr
			reduce(8), // !=, reduce: RelExpr
			reduce(8), // <>, reduce: RelExpr
			nil,       // (
			reduce(8), // ), reduce: RelExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			reduce(8), // ,, reduce: RelExpr
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(9), // &&, reduce: RelExpr
			reduce(9), // ||, reduce: RelExpr
			reduce(9), // ==, reduce: RelExpr
			reduce(9), // !=, reduce: RelExpr
			reduce(9), // <>, reduce: RelExpr
			nil,       // (
			reduce(9), // ), reduce: RelExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			reduce(9), // ,, reduce: RelExpr
			nil,       // empty
			nil,       // .
			nil,       // identifier
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(11), // &&, reduce: UnaryExpr
			reduce(11), // ||, reduce: UnaryExpr
			reduce(11), // ==, reduce: UnaryExpr
			reduce(11), // !=, reduce: UnaryExpr
			reduce(11), // <>, reduce: UnaryExpr
			nil,        // (
			reduce(11), // ), reduce: UnaryExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(11), // ,, reduce: UnaryExpr
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			nil,        // (
			reduce(18), // ), reduce: ArgList
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(18), // ,, reduce: ArgList
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(24), // &&, reduce: DerefExpr
			reduce(24), // ||, reduce: DerefExpr
			reduce(24), // ==, reduce: DerefExpr
			reduce(24), // !=, reduce: DerefExpr
			reduce(24), // <>, reduce: DerefExpr
			shift(103), // (
			reduce(24), // ), reduce: DerefExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(24), // ,, reduce: DerefExpr
			nil,        // empty
			reduce(24), // ., reduce: DerefExpr
			nil,        // identifier
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			nil,        // (
			shift(104), // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			shift(86),  // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			nil,        // (
			shift(105), // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			shift(86),  // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(21), // $, reduce: CallExpr
			reduce(21), // &&, reduce: CallExpr
			reduce(21), // ||, reduce: CallExpr
			reduce(21), // ==, reduce: CallExpr
			reduce(21), // !=, reduce: CallExpr
			reduce(21), // <>, reduce: CallExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			shift(59),  // (
			reduce(20), // ), reduce: ArgList
			shift(62),  // true
			shift(63),  // false
			shift(64),  // int_lit
			shift(65),  // string_lit
			reduce(20), // ,, reduce: ArgList
			nil,        // empty
			nil,        // .
			shift(68),  // identifier
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(22), // &&, reduce: CallExpr
			reduce(22), // ||, reduce: CallExpr
			reduce(22), // ==, reduce: CallExpr
			reduce(22), // !=, reduce: CallExpr
			reduce(22), // <>, reduce: CallExpr
			nil,        // (
			reduce(22), // ), reduce: CallExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(22), // ,, reduce: CallExpr
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(21), // &&, reduce: CallExpr
			reduce(21), // ||, reduce: CallExpr
			reduce(21), // ==, reduce: CallExpr
			reduce(21), // !=, reduce: CallExpr
			reduce(21), // <>, reduce: CallExpr
			nil,        // (
			reduce(21), // ), reduce: CallExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // &&
			nil,        // ||
			nil,        // ==
			nil,        // !=
			nil,        // <>
			nil,        // (
			shift(107), // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			shift(86),  // ,
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(21), // &&, reduce: CallExpr
			reduce(21), // ||, reduce: CallExpr
			reduce(21), // ==, reduce: CallExpr
			reduce(21), // !=, reduce: CallExpr
			reduce(21), // <>, reduce: CallExpr
			nil,        // (
			reduce(21), // ), reduce: CallExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			reduce(21), // ,, reduce: CallExpr
			nil,        // empty
			nil,        // .
			nil,        // identifier
		},
	},
}
