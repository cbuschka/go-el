// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			shift(14), // identifier
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // $
			nil,          // &&
			nil,          // ||
			nil,          // ==
			nil,          // !=
			nil,          // <>
			nil,          // (
			nil,          // )
			nil,          // true
			nil,          // false
			nil,          // int_lit
			nil,          // string_lit
			nil,          // identifier
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: Goal
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // $, reduce: Expr
			shift(15), // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(4), // $, reduce: AndExpr
			reduce(4), // &&, reduce: AndExpr
			shift(16), // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(6), // $, reduce: OrExpr
			reduce(6), // &&, reduce: OrExpr
			reduce(6), // ||, reduce: OrExpr
			shift(17), // ==
			shift(18), // !=
			shift(19), // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(10), // $, reduce: RelExpr
			reduce(10), // &&, reduce: RelExpr
			reduce(10), // ||, reduce: RelExpr
			reduce(10), // ==, reduce: RelExpr
			reduce(10), // !=, reduce: RelExpr
			reduce(10), // <>, reduce: RelExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(25), // (
			nil,       // )
			shift(28), // true
			shift(29), // false
			shift(30), // int_lit
			shift(31), // string_lit
			shift(32), // identifier
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(12), // $, reduce: UnaryExpr
			reduce(12), // &&, reduce: UnaryExpr
			reduce(12), // ||, reduce: UnaryExpr
			reduce(12), // ==, reduce: UnaryExpr
			reduce(12), // !=, reduce: UnaryExpr
			reduce(12), // <>, reduce: UnaryExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(13), // $, reduce: UnaryExpr
			reduce(13), // &&, reduce: UnaryExpr
			reduce(13), // ||, reduce: UnaryExpr
			reduce(13), // ==, reduce: UnaryExpr
			reduce(13), // !=, reduce: UnaryExpr
			reduce(13), // <>, reduce: UnaryExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(14), // $, reduce: ConstantExpr
			reduce(14), // &&, reduce: ConstantExpr
			reduce(14), // ||, reduce: ConstantExpr
			reduce(14), // ==, reduce: ConstantExpr
			reduce(14), // !=, reduce: ConstantExpr
			reduce(14), // <>, reduce: ConstantExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(15), // $, reduce: ConstantExpr
			reduce(15), // &&, reduce: ConstantExpr
			reduce(15), // ||, reduce: ConstantExpr
			reduce(15), // ==, reduce: ConstantExpr
			reduce(15), // !=, reduce: ConstantExpr
			reduce(15), // <>, reduce: ConstantExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(16), // $, reduce: ConstantExpr
			reduce(16), // &&, reduce: ConstantExpr
			reduce(16), // ||, reduce: ConstantExpr
			reduce(16), // ==, reduce: ConstantExpr
			reduce(16), // !=, reduce: ConstantExpr
			reduce(16), // <>, reduce: ConstantExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(17), // $, reduce: ConstantExpr
			reduce(17), // &&, reduce: ConstantExpr
			reduce(17), // ||, reduce: ConstantExpr
			reduce(17), // ==, reduce: ConstantExpr
			reduce(17), // !=, reduce: ConstantExpr
			reduce(17), // <>, reduce: ConstantExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(18), // $, reduce: Name
			reduce(18), // &&, reduce: Name
			reduce(18), // ||, reduce: Name
			reduce(18), // ==, reduce: Name
			reduce(18), // !=, reduce: Name
			reduce(18), // <>, reduce: Name
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			shift(14), // identifier
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			shift(14), // identifier
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			shift(14), // identifier
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			shift(14), // identifier
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(7),  // (
			nil,       // )
			shift(10), // true
			shift(11), // false
			shift(12), // int_lit
			shift(13), // string_lit
			shift(14), // identifier
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			shift(38), // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(39), // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			reduce(2), // ), reduce: Expr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(4), // &&, reduce: AndExpr
			shift(40), // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			reduce(4), // ), reduce: AndExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(6), // &&, reduce: OrExpr
			reduce(6), // ||, reduce: OrExpr
			shift(41), // ==
			shift(42), // !=
			shift(43), // <>
			nil,       // (
			reduce(6), // ), reduce: OrExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(10), // &&, reduce: RelExpr
			reduce(10), // ||, reduce: RelExpr
			reduce(10), // ==, reduce: RelExpr
			reduce(10), // !=, reduce: RelExpr
			reduce(10), // <>, reduce: RelExpr
			nil,        // (
			reduce(10), // ), reduce: RelExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(25), // (
			nil,       // )
			shift(28), // true
			shift(29), // false
			shift(30), // int_lit
			shift(31), // string_lit
			shift(32), // identifier
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(12), // &&, reduce: UnaryExpr
			reduce(12), // ||, reduce: UnaryExpr
			reduce(12), // ==, reduce: UnaryExpr
			reduce(12), // !=, reduce: UnaryExpr
			reduce(12), // <>, reduce: UnaryExpr
			nil,        // (
			reduce(12), // ), reduce: UnaryExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(13), // &&, reduce: UnaryExpr
			reduce(13), // ||, reduce: UnaryExpr
			reduce(13), // ==, reduce: UnaryExpr
			reduce(13), // !=, reduce: UnaryExpr
			reduce(13), // <>, reduce: UnaryExpr
			nil,        // (
			reduce(13), // ), reduce: UnaryExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(14), // &&, reduce: ConstantExpr
			reduce(14), // ||, reduce: ConstantExpr
			reduce(14), // ==, reduce: ConstantExpr
			reduce(14), // !=, reduce: ConstantExpr
			reduce(14), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(14), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(15), // &&, reduce: ConstantExpr
			reduce(15), // ||, reduce: ConstantExpr
			reduce(15), // ==, reduce: ConstantExpr
			reduce(15), // !=, reduce: ConstantExpr
			reduce(15), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(15), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(16), // &&, reduce: ConstantExpr
			reduce(16), // ||, reduce: ConstantExpr
			reduce(16), // ==, reduce: ConstantExpr
			reduce(16), // !=, reduce: ConstantExpr
			reduce(16), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(16), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(17), // &&, reduce: ConstantExpr
			reduce(17), // ||, reduce: ConstantExpr
			reduce(17), // ==, reduce: ConstantExpr
			reduce(17), // !=, reduce: ConstantExpr
			reduce(17), // <>, reduce: ConstantExpr
			nil,        // (
			reduce(17), // ), reduce: ConstantExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(18), // &&, reduce: Name
			reduce(18), // ||, reduce: Name
			reduce(18), // ==, reduce: Name
			reduce(18), // !=, reduce: Name
			reduce(18), // <>, reduce: Name
			nil,        // (
			reduce(18), // ), reduce: Name
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(3), // $, reduce: AndExpr
			reduce(3), // &&, reduce: AndExpr
			shift(16), // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(5), // $, reduce: OrExpr
			reduce(5), // &&, reduce: OrExpr
			reduce(5), // ||, reduce: OrExpr
			shift(17), // ==
			shift(18), // !=
			shift(19), // <>
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(7), // $, reduce: RelExpr
			reduce(7), // &&, reduce: RelExpr
			reduce(7), // ||, reduce: RelExpr
			reduce(7), // ==, reduce: RelExpr
			reduce(7), // !=, reduce: RelExpr
			reduce(7), // <>, reduce: RelExpr
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(8), // $, reduce: RelExpr
			reduce(8), // &&, reduce: RelExpr
			reduce(8), // ||, reduce: RelExpr
			reduce(8), // ==, reduce: RelExpr
			reduce(8), // !=, reduce: RelExpr
			reduce(8), // <>, reduce: RelExpr
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(9), // $, reduce: RelExpr
			reduce(9), // &&, reduce: RelExpr
			reduce(9), // ||, reduce: RelExpr
			reduce(9), // ==, reduce: RelExpr
			reduce(9), // !=, reduce: RelExpr
			reduce(9), // <>, reduce: RelExpr
			nil,       // (
			nil,       // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(11), // $, reduce: UnaryExpr
			reduce(11), // &&, reduce: UnaryExpr
			reduce(11), // ||, reduce: UnaryExpr
			reduce(11), // ==, reduce: UnaryExpr
			reduce(11), // !=, reduce: UnaryExpr
			reduce(11), // <>, reduce: UnaryExpr
			nil,        // (
			nil,        // )
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(25), // (
			nil,       // )
			shift(28), // true
			shift(29), // false
			shift(30), // int_lit
			shift(31), // string_lit
			shift(32), // identifier
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(25), // (
			nil,       // )
			shift(28), // true
			shift(29), // false
			shift(30), // int_lit
			shift(31), // string_lit
			shift(32), // identifier
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(25), // (
			nil,       // )
			shift(28), // true
			shift(29), // false
			shift(30), // int_lit
			shift(31), // string_lit
			shift(32), // identifier
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(25), // (
			nil,       // )
			shift(28), // true
			shift(29), // false
			shift(30), // int_lit
			shift(31), // string_lit
			shift(32), // identifier
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			shift(25), // (
			nil,       // )
			shift(28), // true
			shift(29), // false
			shift(30), // int_lit
			shift(31), // string_lit
			shift(32), // identifier
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // &&
			nil,       // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			shift(50), // )
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(3), // &&, reduce: AndExpr
			shift(40), // ||
			nil,       // ==
			nil,       // !=
			nil,       // <>
			nil,       // (
			reduce(3), // ), reduce: AndExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(5), // &&, reduce: OrExpr
			reduce(5), // ||, reduce: OrExpr
			shift(41), // ==
			shift(42), // !=
			shift(43), // <>
			nil,       // (
			reduce(5), // ), reduce: OrExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(7), // &&, reduce: RelExpr
			reduce(7), // ||, reduce: RelExpr
			reduce(7), // ==, reduce: RelExpr
			reduce(7), // !=, reduce: RelExpr
			reduce(7), // <>, reduce: RelExpr
			nil,       // (
			reduce(7), // ), reduce: RelExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(8), // &&, reduce: RelExpr
			reduce(8), // ||, reduce: RelExpr
			reduce(8), // ==, reduce: RelExpr
			reduce(8), // !=, reduce: RelExpr
			reduce(8), // <>, reduce: RelExpr
			nil,       // (
			reduce(8), // ), reduce: RelExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(9), // &&, reduce: RelExpr
			reduce(9), // ||, reduce: RelExpr
			reduce(9), // ==, reduce: RelExpr
			reduce(9), // !=, reduce: RelExpr
			reduce(9), // <>, reduce: RelExpr
			nil,       // (
			reduce(9), // ), reduce: RelExpr
			nil,       // true
			nil,       // false
			nil,       // int_lit
			nil,       // string_lit
			nil,       // identifier
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(11), // &&, reduce: UnaryExpr
			reduce(11), // ||, reduce: UnaryExpr
			reduce(11), // ==, reduce: UnaryExpr
			reduce(11), // !=, reduce: UnaryExpr
			reduce(11), // <>, reduce: UnaryExpr
			nil,        // (
			reduce(11), // ), reduce: UnaryExpr
			nil,        // true
			nil,        // false
			nil,        // int_lit
			nil,        // string_lit
			nil,        // identifier
		},
	},
}
